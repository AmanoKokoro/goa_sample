// Code generated by goa v3.2.5, DO NOT EDIT.
//
// actions HTTP client CLI support package
//
// Command:
// $ goa gen sample/design

package client

import (
	"encoding/json"
	"fmt"
	actions "sample/gen/actions"
	"strconv"
)

// BuildHelloPayload builds the payload for the actions hello endpoint from CLI
// flags.
func BuildHelloPayload(actionsHelloBody string) (*actions.HelloPayload, error) {
	var err error
	var body HelloRequestBody
	{
		err = json.Unmarshal([]byte(actionsHelloBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"name\": \"Illum debitis reiciendis quam dolorem.\"\n   }'")
		}
	}
	v := &actions.HelloPayload{
		Name: body.Name,
	}

	return v, nil
}

// BuildIDPayload builds the payload for the actions ID endpoint from CLI flags.
func BuildIDPayload(actionsIDID string) (*actions.IDPayload, error) {
	var err error
	var id int
	{
		var v int64
		v, err = strconv.ParseInt(actionsIDID, 10, 64)
		id = int(v)
		if err != nil {
			return nil, fmt.Errorf("invalid value for id, must be INT")
		}
	}
	v := &actions.IDPayload{}
	v.ID = &id

	return v, nil
}
